#!/bin/bash
#
# Usage is `./wallah/bin/install_node [target_directory] [version]`
#
# If target directory is not provided, it will default to a directory called
# "node" in the current directory.
#
# The version installed is determined with this chain of fallbacks/default:
# * the version provided on the command line
# * the version found in node_root/../package.json in the 'engines.node' key
# * the latest version scraped from the nodejs.org home page HTML :-)
# * a hard-coded fallback to a recent version I try to keep up to date
#   on a best-effort basis
#
# Note that node.js only began shipping pre-built distributions as of v0.8,
# so we only support installing that version or newer.
#
# Downloads will be cached in $HOME/.wallah/cache

readonly DEFAULT_NODE_VERSION="0.10.26"

get_node_version_from_package_json() {
  if [[ ! -f "../package.json" ]]; then
    return
  fi
  echo $("${wallah_bin}/get_json_value" "../package.json" "engines.node") 2>/dev/null
}

get_latest_node_version() {
  # Awesomely fragile way to figure out the latest version of node.
  # scrape the <p>Current Version: v0.10.24</p> HTML from the home page
  curl --silent 'http://nodejs.org' \
    | grep "Current Version: v" \
    | tr -d -C 0123456789.
}

install_node() {
  local version="$1"
  if [[ -z "${version}" ]]; then
    version="$(get_node_version_from_package_json)"
  fi
  if [[ -z "${version}" ]]; then
    version="$(get_latest_node_version)"
  fi
  if [[ -z "${version}" ]]; then
    version="${DEFAULT_NODE_VERSION}"
  fi
  echo "node.js not installed in directory $(pwd -P), installing v${version}..."
  local platform="$(uname | tr A-Z a-z)"
  local cpu=x64
  if [[ "$(uname -p)" = "i686" ]]; then
    cpu=x86
  fi
  local archive="node-v${version}-${platform}-${cpu}.tar.gz"
  local cache_dir="${HOME}/.wallah/cache"
  local cached_archive="${cache_dir}/${archive}"

  if [[ ! -f "${cached_archive}" ]]; then
    mkdir -p "${cache_dir}"
    curl --silent --output "${cached_archive}" \
      "http://nodejs.org/dist/v${version}/${archive}"
  fi
  tar --strip-components=1 --extract --gzip --file "${cached_archive}"
}

main() {
  #sigh. http://mywiki.wooledge.org/BashFAQ/028
  wallah_bin=$(cd $(dirname "$0") && pwd)

  local node_root="$1"
  if [[ -z "${node_root}" ]]; then
    node_root="${wallah_bin}/../../node"
  fi
  shift

  if [[ -x "${node_root}/bin/node" ]]; then
    #all good
    exit 0
  fi

  if ! "${wallah_bin}/check_prerequisites" curl tar; then
    exit 2
  fi

  mkdir -p "${node_root}"
  (cd "${node_root}" && install_node "$@")
}

main "$@"
